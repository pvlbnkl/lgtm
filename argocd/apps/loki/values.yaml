loki:
  serviceMonitor:
    enabled: true
  serviceAccount:
    create: true
    name: loki
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::437023642520:role/eks-sandbox-loki
  loki:
    schemaConfig:
      configs:
      - from: "2024-05-01"
        store: tsdb
        object_store: aws
        schema: v13
        index:
          prefix: index_
          period: 24h

    # -- Check https://grafana.com/docs/loki/latest/configuration/#storage_config for more info on how to configure storages
    storageConfig:
      tsdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/index_cache
      #   index_gateway_client:
      #     server_address: dns:///index-gateway.loki.svc.cluster.local:9095
      aws:
        bucketnames: eks-sandbox-loki-1
        s3: s3://us-east-1
  # ingester:
  #   persistence:
  #     claims:
  #       - name: data
  #         size: 50Gi
  #         storageClass: ebs
  # compactor:
  #   persistence:
  #     claims:
  #       - name: data
  #         size: 50Gi
  #         storageClass: ebs
    structuredConfig:
    # from https://grafana.com/docs/loki/latest/operations/storage/tsdb/
      query_scheduler:
        # the TSDB index dispatches many more, but each individually smaller, requests.
        # We increase the pending request queue sizes to compensate.
        max_outstanding_requests_per_tenant: 32768

      querier:
        # Each `querier` component process runs a number of parallel workers to process queries simultaneously.
        # You may want to adjust this up or down depending on your resource usage
        # (more available cpu and memory can tolerate higher values and vice versa),
        # but we find the most success running at around `16` with tsdb
        max_concurrent: 16
# TODO compactor
