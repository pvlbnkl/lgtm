alloy:
  controller:
    type: 'statefulset'
    replicas: 2
  crds:
    create: true
  serviceMonitor:
    enabled: true
  alloy:
    clustering:
      enabled: true
    configMap:
      create: true
      content: |-
        // Monitoring
        prometheus.remote_write "main" {
          endpoint {
            url = "http://mimir-nginx.mimir.svc.cluster.local:80/api/v1/push"
          }
        }

        prometheus.operator.podmonitors "main" {
          forward_to = [prometheus.remote_write.main.receiver]
          clustering {
            enabled = true
          }
        }

        prometheus.operator.servicemonitors "main" {
          forward_to = [prometheus.remote_write.main.receiver]
          clustering {
            enabled = true
          }
        }

        // Generic discovery
        // __meta_kubernetes_namespace
        discovery.kubernetes "pods" {
          role = "pod"

          // attach_metadata {
          //   node = true
          // }
        }

        // Logging
        loki.write "main" {
          endpoint {
            url = "http://loki-gateway.loki.svc.cluster.local:80/loki/api/v1/push"
          }
        }

        loki.source.kubernetes "main" {
          targets    = discovery.kubernetes.pods.targets
          forward_to = [loki.write.main.receiver]

          clustering {
            enabled = true
          }
        }

        loki.process "main" {
          forward_to = [loki.write.main.receiver]

          stage.label_keep {
              values = [ "kubernetes_pod_name", "kubernetes_pod_container_name" ]
          }
        }


//        loki.relabel "main" {
//          forward_to = [loki.write.main.receiver]

//          rule {
//            action = "replace"
//            source_labels = ["__meta_kubernetes_namespace"]
//            target_label  = "kubernetes_namespace"
//          }

//          rule {
//            action = "replace"
//            source_labels = ["__meta_kubernetes_pod_name"]
//            target_label  = "pod_name"
//          }
//        }
